pipeline {
  agent any
  environment {
    ECR_REPOSITORY = credentials('ECR_REPOSITORY')
    AWS_ACCOUNT_ID = credentials('AWS_ACCOUNT_ID')
    AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
  }
  
   stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    docker.build("${IMAGE_NAME}")
                }
            }
        }

        stage('Push') {
            steps {
                script {
                    docker.withRegistry("https://${REGISTRY}", "${REGISTRY_CREDENTIALS}") {
                        docker.image("${IMAGE_NAME}").push()
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    sshagent([SSH_CREDENTIALS_ID]) {
                        sh """
                        ssh -o StrictHostKeyChecking=no ${DEPLOYMENT_SERVER} << 'EOF'
                            echo "Navigating to deployment directory: ${DEPLOYMENT_DIRECTORY}"
                            cd ${DEPLOYMENT_DIRECTORY} || { echo "Failed to change directory"; exit 1; }
                            echo "Pulling the latest Docker images"
                            docker-compose pull || { echo "Failed to pull Docker images"; exit 1; }
                            echo "Restarting services"
                            docker-compose up -d || { echo "Failed to restart services"; exit 1; }
                            echo "Deployment complete"
EOF
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Deployment completed successfully!'
        }
        failure {
            echo 'Deployment failed.'
        }
    }
}
